name: tests

on:
  push:
  pull_request:

jobs:
  build:
    name: Test deep-beamline-sim with ${{ matrix.docker-binary }} and Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.9"]
        docker-binary: ["docker", "podman"]
      fail-fast: false

    steps:
      - name: Set env vars
        shell: bash -l {0}
        run: |
          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}  # just the repo, as opposed to org/repo
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV
          export DOCKER_BINARY=${{ matrix.docker-binary }}
          echo "DOCKER_BINARY=${DOCKER_BINARY}" >> $GITHUB_ENV
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0

      - name: Install Podman
        if: matrix.docker-binary == 'podman'
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          sudo apt-get -y update
          sudo apt-get -y install podman
      - name: Start Sirepo Docker container
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          . scripts/start_sirepo.sh -d
          export SIREPO_DOCKER_CONTAINER_ID
          echo "SIREPO_DOCKER_CONTAINER_ID=${SIREPO_DOCKER_CONTAINER_ID}" >> $GITHUB_ENV
      - name: Check Sirepo state
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          ${DOCKER_BINARY} images
          ${DOCKER_BINARY} ps -a
          ${DOCKER_BINARY} logs ${SIREPO_DOCKER_CONTAINER_ID}
      - name: Set up Python ${{ matrix.python-version }} with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.REPOSITORY_NAME }}-py${{ matrix.python-version }}
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: Install the package and its dependencies
        shell: bash -l {0}
        run: |
          # set -vxeuo pipefail
          # Do not check for unbound variables (the '-u' flag) as it fails on
          # conda deactivate command:
          # /usr/share/miniconda3/envs/sirepo-bluesky-py3.9/etc/conda/deactivate.d/glib_deactivate.sh:
          # line 1: GSETTINGS_SCHEMA_DIR_CONDA_BACKUP: unbound variable
          set -vxeo pipefail
          conda env list
          conda install -c conda-forge mamba
          mamba install -c conda-forge shadow3 srwpy
          conda install pytorch torchvision torchaudio cpuonly -c pytorch
          pip install --upgrade pip wheel
          pip install .
          pip install -r requirements-dev.txt
          pip list
          conda list
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          pytest -s -vv
          status=$?
          echo "Sirepo ${DOCKER_BINARY} container id: ${SIREPO_DOCKER_CONTAINER_ID}"
          ${DOCKER_BINARY} logs ${SIREPO_DOCKER_CONTAINER_ID}
          if [ $status -gt 0 ]; then
              exit $status
          fi
